// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="movie-parent"
>
          <MovieText
                    movies={Array []}
          />
</div>,
        <div
          className="main-section"
>
          <div
                    className="header-parent"
          >
                    <Header
                              evaluateButtonClass={[Function]}
                              handleDisplayCards={[Function]}
                              numOfFaves={0}
                    />
          </div>
          <div
                    className="button-parent"
          >
                    <Button
                              evaluateButtonClass={[Function]}
                              handleDisplayCards={[Function]}
                    />
          </div>
          <div
                    className="card-container-parent"
          >
                    <h1
                              className="welcome-message"
                    >
                              Select a button from above
                    </h1>
                    <CardContainer
                              cardType="welcome"
                              evaluateClass={[Function]}
                              favorites={Array []}
                              people={Array []}
                              planets={Array []}
                              updateFavorites={[Function]}
                              vehicles={Array []}
                    />
          </div>
</div>,
      ],
      "className": "app",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <MovieText
            movies={Array []}
/>,
          "className": "movie-parent",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "movies": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="header-parent"
>
              <Header
                            evaluateButtonClass={[Function]}
                            handleDisplayCards={[Function]}
                            numOfFaves={0}
              />
</div>,
            <div
              className="button-parent"
>
              <Button
                            evaluateButtonClass={[Function]}
                            handleDisplayCards={[Function]}
              />
</div>,
            <div
              className="card-container-parent"
>
              <h1
                            className="welcome-message"
              >
                            Select a button from above
              </h1>
              <CardContainer
                            cardType="welcome"
                            evaluateClass={[Function]}
                            favorites={Array []}
                            people={Array []}
                            planets={Array []}
                            updateFavorites={[Function]}
                            vehicles={Array []}
              />
</div>,
          ],
          "className": "main-section",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Header
                evaluateButtonClass={[Function]}
                handleDisplayCards={[Function]}
                numOfFaves={0}
/>,
              "className": "header-parent",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "evaluateButtonClass": [Function],
                "handleDisplayCards": [Function],
                "numOfFaves": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Button
                evaluateButtonClass={[Function]}
                handleDisplayCards={[Function]}
/>,
              "className": "button-parent",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "evaluateButtonClass": [Function],
                "handleDisplayCards": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1
                  className="welcome-message"
>
                  Select a button from above
</h1>,
                <CardContainer
                  cardType="welcome"
                  evaluateClass={[Function]}
                  favorites={Array []}
                  people={Array []}
                  planets={Array []}
                  updateFavorites={[Function]}
                  vehicles={Array []}
/>,
              ],
              "className": "card-container-parent",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Select a button from above",
                  "className": "welcome-message",
                },
                "ref": null,
                "rendered": "Select a button from above",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "cardType": "welcome",
                  "evaluateClass": [Function],
                  "favorites": Array [],
                  "people": Array [],
                  "planets": Array [],
                  "updateFavorites": [Function],
                  "vehicles": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="movie-parent"
>
            <MovieText
                        movies={Array []}
            />
</div>,
          <div
            className="main-section"
>
            <div
                        className="header-parent"
            >
                        <Header
                                    evaluateButtonClass={[Function]}
                                    handleDisplayCards={[Function]}
                                    numOfFaves={0}
                        />
            </div>
            <div
                        className="button-parent"
            >
                        <Button
                                    evaluateButtonClass={[Function]}
                                    handleDisplayCards={[Function]}
                        />
            </div>
            <div
                        className="card-container-parent"
            >
                        <h1
                                    className="welcome-message"
                        >
                                    Select a button from above
                        </h1>
                        <CardContainer
                                    cardType="welcome"
                                    evaluateClass={[Function]}
                                    favorites={Array []}
                                    people={Array []}
                                    planets={Array []}
                                    updateFavorites={[Function]}
                                    vehicles={Array []}
                        />
            </div>
</div>,
        ],
        "className": "app",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <MovieText
              movies={Array []}
/>,
            "className": "movie-parent",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "movies": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="header-parent"
>
                <Header
                                evaluateButtonClass={[Function]}
                                handleDisplayCards={[Function]}
                                numOfFaves={0}
                />
</div>,
              <div
                className="button-parent"
>
                <Button
                                evaluateButtonClass={[Function]}
                                handleDisplayCards={[Function]}
                />
</div>,
              <div
                className="card-container-parent"
>
                <h1
                                className="welcome-message"
                >
                                Select a button from above
                </h1>
                <CardContainer
                                cardType="welcome"
                                evaluateClass={[Function]}
                                favorites={Array []}
                                people={Array []}
                                planets={Array []}
                                updateFavorites={[Function]}
                                vehicles={Array []}
                />
</div>,
            ],
            "className": "main-section",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Header
                  evaluateButtonClass={[Function]}
                  handleDisplayCards={[Function]}
                  numOfFaves={0}
/>,
                "className": "header-parent",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "evaluateButtonClass": [Function],
                  "handleDisplayCards": [Function],
                  "numOfFaves": 0,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Button
                  evaluateButtonClass={[Function]}
                  handleDisplayCards={[Function]}
/>,
                "className": "button-parent",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "evaluateButtonClass": [Function],
                  "handleDisplayCards": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1
                    className="welcome-message"
>
                    Select a button from above
</h1>,
                  <CardContainer
                    cardType="welcome"
                    evaluateClass={[Function]}
                    favorites={Array []}
                    people={Array []}
                    planets={Array []}
                    updateFavorites={[Function]}
                    vehicles={Array []}
/>,
                ],
                "className": "card-container-parent",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Select a button from above",
                    "className": "welcome-message",
                  },
                  "ref": null,
                  "rendered": "Select a button from above",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "cardType": "welcome",
                    "evaluateClass": [Function],
                    "favorites": Array [],
                    "people": Array [],
                    "planets": Array [],
                    "updateFavorites": [Function],
                    "vehicles": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
